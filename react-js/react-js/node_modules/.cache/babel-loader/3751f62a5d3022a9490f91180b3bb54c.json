{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, SET_MESSAGE } from \"./types\";\nimport CompanyService from \"../services/company-service\";\nexport const addCompany = (companyname, password, role, email, criteria) => dispatch => {\n  return CompanyService.addCompany(companyname, password, role, email, criteria).then(response => {\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    dispatch({\n      type: REGISTER_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};","map":{"version":3,"names":["REGISTER_SUCCESS","REGISTER_FAIL","SET_MESSAGE","CompanyService","addCompany","companyname","password","role","email","criteria","dispatch","then","response","type","payload","data","message","Promise","resolve","error","toString","reject"],"sources":["C:/Users/ashis/Downloads/react-js (2)/react-js/src/actions/company.js"],"sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    SET_MESSAGE,\r\n  } from \"./types\";\r\n  \r\n  import CompanyService from \"../services/company-service\";\r\n  \r\n  export const addCompany = (companyname, password, role, email,criteria) => (dispatch) => {\r\n    return CompanyService.addCompany(companyname, password, role, email,criteria).then(\r\n      (response) => {\r\n        dispatch({\r\n          type: REGISTER_SUCCESS,\r\n        });\r\n  \r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: response.data.message,\r\n        });\r\n  \r\n        return Promise.resolve();\r\n      },\r\n      (error) => {\r\n        const message =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n  \r\n        dispatch({\r\n          type: REGISTER_FAIL,\r\n        });\r\n  \r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: message,\r\n        });\r\n  \r\n        return Promise.reject();\r\n      }\r\n    );\r\n  };\r\n  \r\n  \r\n  "],"mappings":"AAAA,SACIA,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,QAIS,SAJT;AAME,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAcC,QAAd,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAoCC,QAApC,KAAkDC,QAAD,IAAc;EACvF,OAAOP,cAAc,CAACC,UAAf,CAA0BC,WAA1B,EAAuCC,QAAvC,EAAiDC,IAAjD,EAAuDC,KAAvD,EAA6DC,QAA7D,EAAuEE,IAAvE,CACJC,QAAD,IAAc;IACZF,QAAQ,CAAC;MACPG,IAAI,EAAEb;IADC,CAAD,CAAR;IAIAU,QAAQ,CAAC;MACPG,IAAI,EAAEX,WADC;MAEPY,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;IAFhB,CAAD,CAAR;IAKA,OAAOC,OAAO,CAACC,OAAR,EAAP;EACD,CAZI,EAaJC,KAAD,IAAW;IACT,MAAMH,OAAO,GACVG,KAAK,CAACP,QAAN,IACCO,KAAK,CAACP,QAAN,CAAeG,IADhB,IAECI,KAAK,CAACP,QAAN,CAAeG,IAAf,CAAoBC,OAFtB,IAGAG,KAAK,CAACH,OAHN,IAIAG,KAAK,CAACC,QAAN,EALF;IAOAV,QAAQ,CAAC;MACPG,IAAI,EAAEZ;IADC,CAAD,CAAR;IAIAS,QAAQ,CAAC;MACPG,IAAI,EAAEX,WADC;MAEPY,OAAO,EAAEE;IAFF,CAAD,CAAR;IAKA,OAAOC,OAAO,CAACI,MAAR,EAAP;EACD,CA/BI,CAAP;AAiCD,CAlCM"},"metadata":{},"sourceType":"module"}