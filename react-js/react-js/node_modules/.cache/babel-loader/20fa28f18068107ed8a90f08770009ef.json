{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashis\\\\Downloads\\\\react-js (2)\\\\react-js\\\\src\\\\components\\\\ApplyJob.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UserService from \"../services/user.service\";\nimport EventBus from \"../common/EventBus\";\nimport axios from \"axios\";\nimport authHeader from \"../services/auth-header\";\nimport Table from 'react-bootstrap/Table';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ApplyJob = () => {\n  _s();\n\n  const [companies, setCompanies] = useState([]);\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n\n  const fetchCompaniess = async () => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:8080/api/companies/availableCompanies/\" + currentUser.id, {\n      headers: authHeader()\n    });\n    const companies = data;\n    setCompanies(companies);\n    console.log(companies);\n  };\n\n  const applyForCompany = id => {\n    console.log(\"Apply for: \" + id + \" studId: \" + currentUser.id); // axios.post(\"http://localhost:8080/api/companies/applycompany/\"+id, { headers: authHeader() });\n\n    return axios.post(\"http://localhost:8080/api/companies/applycompany/\" + id + \"/\" + currentUser.id, {}, {\n      headers: authHeader()\n    }).then(res => {\n      if (res.status === 200) {\n        //return <Redirect to='/'/>;\n        window.location.replace(\"/jobs\"); //this.setState({ redirect: true }); // after signing up, set the state to true. This will trigger a re-render\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchCompaniess();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        cellPadding: \"15\",\n        cellSpacing: \"10\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: companies.map(company => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: company.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                onClick: e => applyForCompany(company.id),\n                children: \"Apply For Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)]\n          }, company.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApplyJob, \"b/urvpbt0UUDblryMyAzGytnkeE=\", false, function () {\n  return [useSelector];\n});\n\n_c = ApplyJob;\nexport default ApplyJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyJob\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","UserService","EventBus","axios","authHeader","Table","Link","ApplyJob","companies","setCompanies","user","currentUser","state","auth","fetchCompaniess","data","get","id","headers","console","log","applyForCompany","post","then","res","status","window","location","replace","map","company","name","role","e"],"sources":["C:/Users/ashis/Downloads/react-js (2)/react-js/src/components/ApplyJob.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UserService from \"../services/user.service\";\nimport EventBus from \"../common/EventBus\";\nimport axios from \"axios\";\nimport authHeader from \"../services/auth-header\";\nimport Table from 'react-bootstrap/Table';\nimport {  Link } from \"react-router-dom\";\n\n\nconst ApplyJob = () => {\n\n\n  const [companies, setCompanies] = useState([]);\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const fetchCompaniess = async () => {\n    const { data } = await axios.get(\"http://localhost:8080/api/companies/availableCompanies/\"+currentUser.id, { headers: authHeader() });\n    const companies = data;\n    setCompanies(companies);\n    console.log(companies);\n  };\n\nconst applyForCompany = (id) => { \n    console.log(\"Apply for: \"+id+\" studId: \"+currentUser.id);\n   // axios.post(\"http://localhost:8080/api/companies/applycompany/\"+id, { headers: authHeader() });\n\n   return axios.post(\"http://localhost:8080/api/companies/applycompany/\"+id+\"/\"+currentUser.id, {},{\n    headers: authHeader()\n  }) .then(res => {\n        if (res.status === 200) {\n            //return <Redirect to='/'/>;\n            window.location.replace(\"/jobs\");\n            //this.setState({ redirect: true }); // after signing up, set the state to true. This will trigger a re-render\n        }\n    });\n\n}\n  useEffect(() => {\n    fetchCompaniess();\n  }, []);\n\n\n  return (\n    <div className=\"container\">  \n<div>\n<Table striped bordered hover cellPadding=\"15\" cellSpacing=\"10\">\n            <thead>\n                <tr>\n                    <th>Company Name</th>\n                    <th>Role</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n \n            <tbody>\n                {companies.map(company =>\n                    <tr key={company.id}>\n                        <td>{company.name}</td>\n                        <td>{company.role}</td>\n                        <td>\n                    \n                        <a href=\"#\" onClick={(e) => applyForCompany(company.id)}>Apply For Job</a>\n\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </Table>\n</div></div>\n\n  );\n};\n\nexport default ApplyJob;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}